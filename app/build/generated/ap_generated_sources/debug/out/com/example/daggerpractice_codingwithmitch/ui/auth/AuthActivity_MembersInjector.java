// Generated by Dagger (https://dagger.dev).
package com.example.daggerpractice_codingwithmitch.ui.auth;

import android.graphics.drawable.Drawable;
import com.bumptech.glide.RequestManager;
import com.example.daggerpractice_codingwithmitch.viewmodels.ViewModelProviderFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerAppCompatActivity_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthActivity_MembersInjector implements MembersInjector<AuthActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProviderFactory> providerFactoryProvider;

  private final Provider<Drawable> logoProvider;

  private final Provider<RequestManager> requestManagerProvider;

  public AuthActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider, Provider<Drawable> logoProvider,
      Provider<RequestManager> requestManagerProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.providerFactoryProvider = providerFactoryProvider;
    this.logoProvider = logoProvider;
    this.requestManagerProvider = requestManagerProvider;
  }

  public static MembersInjector<AuthActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProviderFactory> providerFactoryProvider, Provider<Drawable> logoProvider,
      Provider<RequestManager> requestManagerProvider) {
    return new AuthActivity_MembersInjector(androidInjectorProvider, providerFactoryProvider, logoProvider, requestManagerProvider);
  }

  @Override
  public void injectMembers(AuthActivity instance) {
    DaggerAppCompatActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
    injectLogo(instance, logoProvider.get());
    injectRequestManager(instance, requestManagerProvider.get());
  }

  @InjectedFieldSignature("com.example.daggerpractice_codingwithmitch.ui.auth.AuthActivity.providerFactory")
  public static void injectProviderFactory(AuthActivity instance,
      ViewModelProviderFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }

  @InjectedFieldSignature("com.example.daggerpractice_codingwithmitch.ui.auth.AuthActivity.logo")
  public static void injectLogo(AuthActivity instance, Drawable logo) {
    instance.logo = logo;
  }

  @InjectedFieldSignature("com.example.daggerpractice_codingwithmitch.ui.auth.AuthActivity.requestManager")
  public static void injectRequestManager(AuthActivity instance, RequestManager requestManager) {
    instance.requestManager = requestManager;
  }
}
